{"version":3,"sources":["containers/card/card-component.tsx","containers/card-list.tsx","containers/searchbox/search-box-component.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","className","src","user","id","name","email","CardList","users","map","p","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","state","searchField","title","fetch","then","resp","json","setState","this","filteredMonsters","filter","monster","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6TAGaA,EAAwC,SAACC,GAElD,OAAQ,sBAAKC,UAAU,iBAAf,UACJ,qBAAKC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,4BACR,+BAAKJ,EAAMG,KAAKE,KAAhB,OACA,4BAAIL,EAAMG,KAAKG,YCAVC,EAAoC,SAACP,GAC9C,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMQ,MAAMC,KAAI,SAACC,GAChB,OAAO,cAAC,EAAD,CAAiBP,KAAMO,GAAZA,EAAEN,UCPjBO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OAAO,sBAAKZ,UAAU,SAAf,cAAyB,uBAAOa,KAAK,SAASC,YAAaH,EAAaI,SAAUH,SCUxEI,E,kDAEnB,WAAYjB,GAAgB,IAAD,8BACzB,cAAMA,IAEDkB,MAAQ,CAACV,MAAO,GAAIW,YAAa,GAAIC,MAAO,IAHxB,E,qDAM3B,WAAqB,IAAD,OAClBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UACrEF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CAACjB,MAAOe,S,oBAI1B,WAAS,IAAD,SAE8BG,KAAKR,MAAlCV,EAFD,EAECA,MAAOW,EAFR,EAEQA,YAAaC,EAFrB,EAEqBA,MAErBO,EAAmBnB,EAAMoB,QAAO,SAACC,GAAD,OAAgCA,EAAQxB,KAAKyB,cAAcC,SAASZ,EAAYW,kBAEtH,OACE,sBAAK7B,UAAU,MAAf,UACA,6BAAKmB,IAEH,cAAC,EAAD,CAAWR,YAAY,WAAWC,aAAc,SAACmB,GAAD,OAChD,EAAKP,SAAS,CAACN,YAAaa,EAAEC,OAAOC,QAAS,kBAI9C,cAAC,EAAD,CAAU1B,MAAOmB,W,GA9BQQ,IAAMC,WCDxBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OAEL,cAAC,EAAD,CAAKzC,KAAM,OAEb0C,SAASC,eAAe,SAM1BX,M","file":"static/js/main.ebd4dea2.chunk.js","sourcesContent":["import React, {FunctionComponent} from 'react'\r\nimport './card-style.css'\r\n\r\nexport const Card: FunctionComponent<{user: any}> =  (props) => {\r\n\r\n    return  <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.user.id}?set=set2&size=200x200`} /> \r\n        <h2>{props.user.name} </h2>\r\n        <p>{props.user.email}</p>\r\n     </div>\r\n}","import React, { FunctionComponent } from 'react';\r\nimport './card-list.css';\r\nimport { Card } from './card/card-component';\r\n\r\ntype User = {\r\n    users: [];\r\n}\r\n\r\nexport const CardList: FunctionComponent<User> = (props) => {\r\n    return <div className='card-list'>\r\n        {props.users.map((p: { id: string | number | null | undefined; name: React.ReactNode; }) => {\r\n          return <Card key={p.id} user={p}/>\r\n        })}\r\n    </div>; \r\n         \r\n         \r\n}","import React from 'react'\r\nimport './search-box-style.css'\r\n\r\n\r\nexport const SearchBox = ({placeHolder, handleChange}) => {\r\n    return <div className=\"search\"> <input type=\"search\" placeholder={placeHolder} onChange={handleChange} /></div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {CardList} from './containers/card-list'\r\nimport {SearchBox} from './containers/searchbox/search-box-component' \r\ntype MyState = {\r\n  users: any;\r\n  searchField: any;\r\n  title: \"\";\r\n}\r\n\r\n\r\ntype MyProps = {\r\n  name: any;\r\n}\r\n\r\nexport default class App extends React.Component<MyProps, MyState> {\r\n\r\n  constructor(props: MyProps){\r\n    super(props);\r\n\r\n    this.state = {users: [], searchField: '', title: \"\"}\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users').then(resp => resp.json())\r\n    .then(resp => {\r\n      this.setState({users: resp})});\r\n  }\r\n  \r\n\r\n  render(){\r\n\r\n    const {users, searchField, title} = this.state;\r\n    \r\n    const filteredMonsters = users.filter((monster: { name: string; }) => monster.name.toLowerCase().includes(searchField.toLowerCase()));\r\n\r\n    return(\r\n      <div className=\"App\">\r\n      <h1>{title}</h1>\r\n\r\n        <SearchBox placeHolder=\"monsters\" handleChange={(e: { target: { value: any; }; }) => \r\n        this.setState({searchField: e.target.value }, () => {\r\n        })\r\n      } />\r\n\r\n        <CardList users={filteredMonsters} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n \r\n    <App name={'Hi'}/>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}